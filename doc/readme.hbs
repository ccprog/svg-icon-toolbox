# svg-icon-toolbox

[![Build Status](https://travis-ci.org/ccprog/svg-icon-toolbox.svg?branch=master)](https://travis-ci.org/ccprog/svg-icon-toolbox)
[![Coverage Status](https://coveralls.io/repos/github/ccprog/svg-icon-toolbox/badge.svg?branch=master)](https://coveralls.io/github/ccprog/svg-icon-toolbox?branch=master)
[![GitHub version](https://badge.fury.io/gh/ccprog%2Fsvg-icon-toolbox.svg)](https://badge.fury.io/gh/ccprog%2Fsvg-icon-toolbox)

A toolbox for svg icon and style assets workflows for node.js.

The use of stylesheets with standalone SVG files is not ubiquitious. Browsers
understand them, some renderers (like [librsvg](https://wiki.gnome.org/Projects/LibRsvg))
do not. Workflow in editors mostly do not support their usage, or are at least
not helpfull, even if they understand them.

This module aims to bridge that state of affairs by offering a workflow that
- inserts stylesheets into SVG files, optionally compiling them from Sass
- inlines stylesheets by distributing all styles into element style attributes

Secondly, it exports single objects from such a file to PNG or SVG (icon) files.
This part of the workflow depends on the command line features of
[Inkscape](https://inkscape.org) for
- identifying the bounding box of objects: a major undertaking not easily done,
  so the module takes advantage of the existing solution
- PNG export: to ensure the correct interpretation of stylesheets

## Installation

```shell
npm install svg-icon-toolbox --save-dev
```

Make sure Inkscape is installed and in your `PATH`.

## Usage

```js
var toolbox = require('svg-icon-toolbox');

var list = ['icon-default', 'icon-active', 'icon-insensitive'];

toolbox.batch('src/assets.svg', [
    { task: 'stylize', arg: {src: 'src/sass/assets.scss'} },
    { task: 'write', arg: 'dist/assets.svg' },
    { task: 'export', arg: {
        ids: list,
        format: 'png',
        dir: 'dist/assets/'
        exportOptions: { dpi: 180 }
    } }
], callback);
```
### As a Grunt task

If you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the
[Getting Started](http://gruntjs.com/getting-started) guide, as it explains how
to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install
and use Grunt plugins. Once you're familiar with that process, do not forget to
install grunt:

```shell
npm install grunt --save-dev
```
Then configure:

```
module.exports = function(grunt) {

  grunt.initConfig({
    svg_icon_toolbox: {
      src: 'src/assets.svg',
      options: {
        tasks: [
          { task: 'stylize', arg: {src: 'src/sass/assets.scss'} },
          { task: 'write', arg: 'dist/assets.svg' },
          { task: 'export', arg: {
              idFile: 'src/iconlist.txt',
              format: 'png',
              dir: 'dist/assets/'
              exportOptions: { dpi: 180 }
          } }
        ]
      }
    }
  });

  grunt.task.loadNpmTasks('svg-icon-toolbox');
};
```

## API

{{>all-docs~}}